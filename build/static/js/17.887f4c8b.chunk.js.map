{"version":3,"sources":["screens/login/index.tsx","components/Error.tsx"],"names":["LoginForm","props","useState","username","setUsername","password","setPassword","valiUsername","setValiUsername","valiPassword","setValiPassword","dispatch","useDispatch","history","useHistory","e","a","preventDefault","API","user","login","res","localStorage","setItem","data","token","setResLogin","message","success","backTo","location","search","push","slice","HOME","errorAPI","className","onSubmit","value","onChange","target","type","name","placeholder","autoComplete","to","SEND_RESET_PASSWORD","REGISTER","error","console","log","response"],"mappings":"wPA4GeA,UA9Fa,SAACC,GAAgB,IAAD,EACRC,mBAAiB,IADT,mBACjCC,EADiC,KACvBC,EADuB,OAERF,mBAAiB,IAFT,mBAEjCG,EAFiC,KAEvBC,EAFuB,OAGAJ,oBAAkB,GAHlB,mBAGjCK,EAHiC,KAGnBC,EAHmB,OAIAN,oBAAkB,GAJlB,mBAIjCO,EAJiC,KAInBC,EAJmB,KAMlCC,EAAWC,cACXC,EAAUC,cAPwB,4CASxC,WAAwBC,GAAxB,iBAAAC,EAAA,yDACID,EAAEE,kBACEd,IAAYE,EAFpB,0CAI4Da,IAAIC,KAAKC,MAAM,CAC3DjB,WACAE,aANhB,OAIkBgB,EAJlB,OAQYC,aAAaC,QAAQ,QAASF,EAAIG,KAAKC,OACvCd,EAASe,YAAYL,EAAIG,KAAKL,KAAME,EAAIG,KAAKC,QAC7CE,IAAQC,QAAQ,+CACVC,EAAiB5B,EAAM6B,SAASC,QAElClB,EAAQmB,KAAKH,EAAOI,MAAM,IAE1BpB,EAAQmB,KAAKE,KAf7B,kDAkBYC,YAAS,EAAD,IAlBpB,2DATwC,sBAgCxC,OACI,qBAAKC,UAAU,QAAf,SACI,sBAAKA,UAAU,SAAf,UACI,0DACA,uBAAMC,SAAU,SAACtB,GAAD,OApCY,2CAoCLsB,CAAStB,IAAIqB,UAAU,QAA9C,UACI,mFAEI,uBACA,uBACIE,MAAOnC,EACPoC,SAAU,SAACxB,GACPX,EAAYW,EAAEyB,OAAOF,OACrB9B,GAAiBO,EAAEyB,OAAOF,QAE9BG,KAAK,OACLC,KAAK,WACLC,YAAY,+CAEfpC,EACG,mBAAG6B,UAAU,gBAAb,qFAIA,cAAC,WAAD,OAIR,2DAEI,uBACA,uBACIE,MAAOjC,EACPkC,SAAU,SAACxB,GACPT,EAAYS,EAAEyB,OAAOF,OACrB5B,GAAiBK,EAAEyB,OAAOF,QAE9BG,KAAK,WACLC,KAAK,WACLC,YAAY,qBACZC,aAAa,OAEhBnC,EACG,mBAAG2B,UAAU,gBAAb,sFAIA,cAAC,WAAD,OAGR,qBAAKA,UAAU,kBAAf,SACI,cAAC,IAAD,CAAMS,GAAIC,IAAV,0CAEJ,wBAAQL,KAAK,SAAb,sCACA,oBAAGL,UAAU,gBAAb,6CACuB,IACnB,cAAC,IAAD,CAAMS,GAAIE,IAAV,oD,iCCrGxB,+CACO,SAASZ,EAASa,GACrBC,QAAQC,IAAI,iBAAkBF,GACA,qBAAnBA,EAAMG,SAIjBxB,IAAQqB,MAAMA,EAAMG,SAAS3B,KAAKG,SAH9BA,IAAQqB,MAAM,uF","file":"static/js/17.887f4c8b.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport { REGISTER, SEND_RESET_PASSWORD } from \"../../router/const\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./login.scss\";\r\nimport API from \"../../api\";\r\nimport { errorAPI } from \"../../components/Error\";\r\nimport { ResponseLogin } from \"../../interface/api/UserAPI\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setResLogin } from \"../../store/actions/userAction\";\r\nimport { message } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HOME } from \"../../router/const\";\r\n\r\nconst LoginForm: React.FC = (props: any) => {\r\n    const [username, setUsername] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [valiUsername, setValiUsername] = useState<boolean>(false);\r\n    const [valiPassword, setValiPassword] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    async function onSubmit(e: React.FormEvent) {\r\n        e.preventDefault();\r\n        if (username && password) {\r\n            try {\r\n                const res: AxiosResponse<ResponseLogin> = await API.user.login({\r\n                    username,\r\n                    password,\r\n                });\r\n                localStorage.setItem(\"token\", res.data.token);\r\n                dispatch(setResLogin(res.data.user, res.data.token));\r\n                message.success(\"Đăng nhập thành công!\");\r\n                const backTo: string = props.location.search;\r\n                if (backTo) {\r\n                    history.push(backTo.slice(6));\r\n                } else {\r\n                    history.push(HOME);\r\n                }\r\n            } catch (err) {\r\n                errorAPI(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"forms_\">\r\n                <h1>Đăng nhập</h1>\r\n                <form onSubmit={(e) => onSubmit(e)} className=\"form_\">\r\n                    <label>\r\n                        Tài khoản đăng nhập (*)\r\n                        <br />\r\n                        <input\r\n                            value={username}\r\n                            onChange={(e) => {\r\n                                setUsername(e.target.value);\r\n                                setValiUsername(!e.target.value);\r\n                            }}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Tài khoản đăng nhập\"\r\n                        />\r\n                        {valiUsername ? (\r\n                            <p className=\"form-mess-err\">\r\n                                Tài khoản không được để trống!\r\n                            </p>\r\n                        ) : (\r\n                            <Fragment />\r\n                        )}\r\n                    </label>\r\n\r\n                    <label>\r\n                        Mật khẩu (*)\r\n                        <br />\r\n                        <input\r\n                            value={password}\r\n                            onChange={(e) => {\r\n                                setPassword(e.target.value);\r\n                                setValiPassword(!e.target.value);\r\n                            }}\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Mật khẩu\"\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        {valiPassword ? (\r\n                            <p className=\"form-mess-err\">\r\n                                Mật khẩu không được để trống!\r\n                            </p>\r\n                        ) : (\r\n                            <Fragment />\r\n                        )}\r\n                    </label>\r\n                    <div className=\"forgot-password\">\r\n                        <Link to={SEND_RESET_PASSWORD}>Quên mật khẩu</Link>\r\n                    </div>\r\n                    <button type=\"submit\">Đăng nhập</button>\r\n                    <p className=\"form-has-user\">\r\n                        Không có tài khoản{\" \"}\r\n                        <Link to={REGISTER}>Đăng ký ngay</Link>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default LoginForm;\r\n","import { message } from \"antd\";\r\nexport function errorAPI(error: any) {\r\n    console.log(\"err___________\", error);\r\n    if (typeof error.response === \"undefined\") {\r\n        message.error(\"Đã có lỗi sảy ra, bạn vui lòng thử lại sau\");\r\n        return;\r\n    }\r\n    message.error(error.response.data.message);\r\n}\r\n"],"sourceRoot":""}