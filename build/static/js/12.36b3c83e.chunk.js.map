{"version":3,"sources":["screens/send-reset-password/index.tsx","components/Error.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["SendResetPassword","useState","username","setUsername","valiUsername","setValiUsername","ok","setOk","e","a","preventDefault","API","user","sendResetPassword","res","data","message","mess","success","errorAPI","className","onSubmit","value","onChange","target","type","name","placeholder","to","LOGIN","REGISTER","onClick","error","console","log","response","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2"],"mappings":"0OAgGeA,UAvFW,WAAO,IAAD,EACIC,mBAAiB,IADrB,mBACrBC,EADqB,KACXC,EADW,OAEYF,oBAAkB,GAF9B,mBAErBG,EAFqB,KAEPC,EAFO,OAGRJ,oBAAkB,GAHV,mBAGrBK,EAHqB,KAGjBC,EAHiB,iDAO5B,WAAwBC,GAAxB,qBAAAC,EAAA,yDACIJ,GAAiBH,GACjBM,EAAEE,kBACER,EAHR,0CAMsBS,IAAIC,KAAKC,kBAAkB,CAAEX,aANnD,OAKkBY,EALlB,qBAO+BA,EAAIC,KAAKC,SAPxC,IAOY,2BAAWC,EAA0B,QACjCD,IAAQE,QAAQD,GAChBV,GAAM,GATtB,gFAYYY,YAAS,EAAD,IAZpB,2DAP4B,sBAwB5B,OACI,sBAAKC,UAAU,sBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,4DACA,uBAAMC,SAAU,SAACb,GAAD,OA5BA,2CA4BOa,CAASb,IAAIY,UAAU,QAA9C,UACI,mFAEI,uBACA,uBACIE,MAAOpB,EACPqB,SAAU,SAACf,GACPL,EAAYK,EAAEgB,OAAOF,OACrBjB,GAAiBG,EAAEgB,OAAOF,QAE9BG,KAAK,OACLC,KAAK,WACLC,YAAY,+CAEfvB,EACG,mBAAGgB,UAAU,gBAAb,qFAIA,cAAC,WAAD,OAIR,wBAAQK,KAAK,SAAb,wCACA,oBAAGL,UAAU,gBAAb,+CAEI,cAAC,IAAD,CAAMQ,GAAIC,IAAV,0CAEJ,oBAAGT,UAAU,gBAAb,6CAEI,cAAC,IAAD,CAAMQ,GAAIE,IAAV,iDAIZ,qBACIV,UACId,EACM,0BACA,+BAJd,SAOI,sBAAKc,UAAU,yBAAf,UACI,kMAIA,sBAAKA,UAAU,wBAAf,UACI,wBAAQW,QAAS,kBAAMxB,GAAM,IAA7B,oBACA,wBAAQa,UAAU,YAAlB,SACI,cAAC,IAAD,CAAMW,QAAS,kBAAMxB,GAAM,IAAQqB,GAAIC,IAAvC,+B,iCCtF5B,+CACO,SAASV,EAASa,GACrBC,QAAQC,IAAI,iBAAkBF,GACA,qBAAnBA,EAAMG,SAIjBnB,IAAQgB,MAAMA,EAAMG,SAASpB,KAAKC,SAH9BA,IAAQgB,MAAM,uF,iCCJtB,8CACe,SAASI,EAA2BC,EAAGC,GACpD,IAAIC,EAEJ,GAAsB,qBAAXC,QAAgD,MAAtBH,EAAEG,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQN,KAAOE,EAAK,YAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEO,OAAqB,CAC/GL,IAAIF,EAAIE,GACZ,IAAIM,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKR,EAAEO,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACN3B,MAAOe,EAAEQ,OAGbrC,EAAG,SAAW0C,GACZ,MAAMA,GAERC,EAAGL,GAIP,MAAM,IAAIM,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLR,EAAG,WACDR,EAAKF,EAAEG,OAAOC,aAEhBO,EAAG,WACD,IAAIQ,EAAOjB,EAAGkB,OAEd,OADAH,EAAmBE,EAAKP,KACjBO,GAEThD,EAAG,SAAWkD,GACZH,GAAS,EACTF,EAAMK,GAERP,EAAG,WACD,IACOG,GAAoC,MAAhBf,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIgB,EAAQ,MAAMF,O","file":"static/js/12.36b3c83e.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport API from \"../../api\";\r\nimport { message } from \"antd\";\r\nimport { errorAPI } from \"../../components/Error\";\r\nimport { LOGIN, REGISTER } from \"../../router/const\";\r\nimport { ResponseSendResetPassword } from \"../../interface/api/UserAPI\";\r\nimport \"./send-reset-password.scss\";\r\nconst SendResetPassword = () => {\r\n    const [username, setUsername] = useState<string>(\"\");\r\n    const [valiUsername, setValiUsername] = useState<boolean>(false);\r\n    const [ok, setOk] = useState<boolean>(false);\r\n\r\n    // const history = useHistory();\r\n\r\n    async function onSubmit(e: React.FormEvent) {\r\n        setValiUsername(!username);\r\n        e.preventDefault();\r\n        if (username) {\r\n            try {\r\n                const res: AxiosResponse<ResponseSendResetPassword> =\r\n                    await API.user.sendResetPassword({ username });\r\n                for (const mess of res.data.message) {\r\n                    message.success(mess);\r\n                    setOk(true);\r\n                }\r\n            } catch (err) {\r\n                errorAPI(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"send-reset-password\">\r\n            <div className=\"forms_\">\r\n                <h1>Quên mật khẩu</h1>\r\n                <form onSubmit={(e) => onSubmit(e)} className=\"form_\">\r\n                    <label>\r\n                        Tài khoản đăng nhập (*)\r\n                        <br />\r\n                        <input\r\n                            value={username}\r\n                            onChange={(e) => {\r\n                                setUsername(e.target.value);\r\n                                setValiUsername(!e.target.value);\r\n                            }}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Tài khoản đăng nhập\"\r\n                        />\r\n                        {valiUsername ? (\r\n                            <p className=\"form-mess-err\">\r\n                                Tài khoản không được để trống!\r\n                            </p>\r\n                        ) : (\r\n                            <Fragment />\r\n                        )}\r\n                    </label>\r\n\r\n                    <button type=\"submit\">Quên mật khẩu</button>\r\n                    <p className=\"form-has-user\">\r\n                        Đã có tài khoản\r\n                        <Link to={LOGIN}> Đăng nhập</Link>\r\n                    </p>\r\n                    <p className=\"form-has-user\">\r\n                        Không có tài khoản\r\n                        <Link to={REGISTER}> Đăng ký ngay</Link>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n            <div\r\n                className={\r\n                    ok\r\n                        ? \"modal-show-notification\"\r\n                        : \"modal-show-notification-none\"\r\n                }\r\n            >\r\n                <div className=\"show-notification-send\">\r\n                    <p>\r\n                        Chúng tôi đã gửi email tới bạn. Bạn vui lòng kiểm tra\r\n                        email để cập nhật mật khẩu mới\r\n                    </p>\r\n                    <div className=\"show-notification-btn\">\r\n                        <button onClick={() => setOk(false)}>Cancel</button>\r\n                        <button className=\"button-ok\">\r\n                            <Link onClick={() => setOk(false)} to={LOGIN}>\r\n                                Ok\r\n                            </Link>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default SendResetPassword;\r\n","import { message } from \"antd\";\r\nexport function errorAPI(error: any) {\r\n    console.log(\"err___________\", error);\r\n    if (typeof error.response === \"undefined\") {\r\n        message.error(\"Đã có lỗi sảy ra, bạn vui lòng thử lại sau\");\r\n        return;\r\n    }\r\n    message.error(error.response.data.message);\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}