{"version":3,"sources":["screens/reset-password/index.tsx","components/Error.tsx","utils/validate.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["ResetPassword","props","useState","password","setPassword","rePassword","setRePassword","valiPassword","setValiPassword","valiRePassword","setValiRePassword","history","useHistory","e","a","preventDefault","checkRePassword","API","user","resetPassword","reset_password_token","location","search","split","res","data","message","m","success","push","LOGIN","errorAPI","className","onSubmit","value","onChange","target","type","name","placeholder","autoComplete","to","error","console","log","response","validateEmail","email","test","String","toLowerCase","repassword","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/13.158d2213.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { LOGIN } from \"../../router/const\";\r\nimport { checkRePassword } from \"../../utils/validate\";\r\nimport \"./reset-password.scss\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport API from \"../../api\";\r\nimport { ResponseResetPassword } from \"../../interface/api/UserAPI\";\r\nimport { errorAPI } from \"../../components/Error\";\r\nimport { message } from \"antd\";\r\nconst ResetPassword = (props: any) => {\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [rePassword, setRePassword] = useState<string>(\"\");\r\n    const [valiPassword, setValiPassword] = useState<boolean>(false);\r\n    const [valiRePassword, setValiRePassword] = useState<boolean>(false);\r\n    const history = useHistory();\r\n    async function onSubmit(e: React.FormEvent) {\r\n        e.preventDefault();\r\n        setValiPassword(!password);\r\n        setValiRePassword(!checkRePassword(password, rePassword));\r\n        if (checkRePassword(password, rePassword)) {\r\n            try {\r\n                const res: AxiosResponse<ResponseResetPassword> =\r\n                    await API.user.resetPassword({\r\n                        password: password,\r\n                        reset_password_token:\r\n                            props.location.search.split(\"=\")[1],\r\n                    });\r\n                for (const m of res.data.message) {\r\n                    message.success(m);\r\n                }\r\n                history.push(LOGIN);\r\n            } catch (err) {\r\n                errorAPI(err);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"reset-password\">\r\n            <div className=\"forms_\">\r\n                <h1>Cập nhật mật khẩu</h1>\r\n                <form onSubmit={(e) => onSubmit(e)} className=\"form_\">\r\n                    <label>\r\n                        <input\r\n                            value={password}\r\n                            onChange={(e) => {\r\n                                setPassword(e.target.value);\r\n                                setValiPassword(!e.target.value);\r\n                            }}\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Mật khẩu\"\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        {valiPassword ? (\r\n                            <p className=\"form-mess-err\">\r\n                                Mật khẩu không được để trống!\r\n                            </p>\r\n                        ) : (\r\n                            <Fragment />\r\n                        )}\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            value={rePassword}\r\n                            onChange={(e) => {\r\n                                setRePassword(e.target.value);\r\n                                setValiRePassword(\r\n                                    !checkRePassword(password, e.target.value)\r\n                                );\r\n                            }}\r\n                            type=\"password\"\r\n                            name=\"re-password\"\r\n                            placeholder=\"Nhập lại mật khẩu\"\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        {valiRePassword ? (\r\n                            <p className=\"form-mess-err\">\r\n                                Nhập lại mật khẩu không khớp!\r\n                            </p>\r\n                        ) : (\r\n                            <Fragment />\r\n                        )}\r\n                    </label>\r\n                    <button type=\"submit\">Cập nhật mật khẩu</button>\r\n                    <p className=\"form-has-user\">\r\n                        Đã có tài khoản <Link to={LOGIN}>Đăng Nhập ngay</Link>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ResetPassword;\r\n","import { message } from \"antd\";\r\nexport function errorAPI(error: any) {\r\n    console.log(\"err___________\", error);\r\n    if (typeof error.response === \"undefined\") {\r\n        message.error(\"Đã có lỗi sảy ra, bạn vui lòng thử lại sau\");\r\n        return;\r\n    }\r\n    message.error(error.response.data.message);\r\n}\r\n","export function validateEmail(email: string) {\r\n    if (!email) return false;\r\n    const re =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport function checkRePassword(password: string, repassword: string) {\r\n    if (!password || !repassword) return false;\r\n    return password === repassword;\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}